name: Build - Test - Miror - Release

on:
  push:

env:
  MIRROR_URL: "git@github.com:EpitechPromo2026/B-FUN-500-PAR-5-2-glados-evan.labourdette.git"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Haskell
        uses: actions/setup-haskell@v1
        with:
          ghc-version: '8.10.3'
          cabal-version: '3.4.0.0'
          stack-version: '2.7.3'
      - name: Build project
        run: |
          cd Glados
          stack build --install-ghc --allow-different-user
          stack --local-bin-path build install

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Haskell
        uses: actions/setup-haskell@v1
        with:
          ghc-version: '8.10.3'
          cabal-version: '3.4.0.0'
          stack-version: '2.7.3'
      - name: Run unit tests
        run: |
          cd Glados
          stack test --coverage
          stack hpc report --all --destdir test/coverage

  mirror:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Check repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Check mirroring
        uses: pixta-dev/repository-mirroring-action@v1
        if: success()
        with:
          target_repo_url: ${{ env.MIRROR_URL }}
          ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}

  create-release:
    name: Release
    needs: mirror
    runs-on: ubuntu-latest
    if: github.ref != 'main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Zip the Glados
        run: |
          cd Glados
          zip -r glados-${{ github.run_number }}.zip .

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: |
            Changes Glados version
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Glados/glados-${{ github.run_number }}.zip
          asset_name: glados-${{ github.run_number }}.zip
          asset_content_type: application/zip
